/**
 * child_process：实现一个简单又实用的非阻塞操作：exec()。
 * exec()：从Node.js来执行一个shell命令，获取当前目录下所有的
 * 文件（“ls -lah”），然后当/start URL请求的时候将文件信息输出
 * 到浏览器里。
 */
var exec = require('child_process').exec;
var querystring = require('querystring');
var fs = require('fs');
var formidable = require('formidable');

function start(response) {
	console.log('Request handler "start" was called');

	// exec('ls -lah', function(error, stdout, stderr) {
	// 	response.writeHead(200, {'Content-Type': 'text/plain'});
	// 	response.write(stdout);
	// 	response.end();
	// });

	// var body = '<html>' +
	// 	'<head>' +
	// 	'<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />' +
	// 	'</head>' +
	// 	'<body>' +
	// 	'<form action="/upload" method="post">' +
	// 	'<textarea name="text" rows="20" cols="60"></textarea>' +
	// 	'<input type="submit" value="Submit text" />' +
	// 	'</form>' +
	// 	'</body>' +
	// 	'</html>';

	var body = '<html>' +
		'<head>' +
		'<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />' +
		'</head>' +
		'<body>' +
		'<form action="/upload" enctype="multipart/form-data" method="post">' +
		'<input type="file" name="upload" multiple="multiple">' +
		'<input type="submit" value="Upload file" />' +
		'</form>' +
		'</body>' +
		'</html>';

		response.writeHead(200, {'Content-Type': 'text/html'});
		response.write(body);
		response.end();
}

function upload(response, request) {
	console.log('Request handler "upload" was called');

	var form = new formidable.IncomingForm();
	console.log('about to parse');
	form.parse(request, function(error, fields, files) {
		console.log('parsing done');
		fs.renameSync(files.upload.path, './tmp/img.jpeg');
		response.writeHead(200, {'Content-Type': 'text/html'});
		response.write('recevied image: <br/>');
		response.write('<img src="/show" />');
		response.end();
	});

	// response.writeHead(200, {'Content-Type': 'text/plain'});
	// response.write('You`ve sent the text: ' + querystring.parse(postData).text);
	// response.end();
}

function show(response) {
	console.log('Request handler "show" was called.');
	fs.readFile('./tmp/img.jpeg', 'binary', function(error, file) {
		if (error) {
			response.writeHead(500, {'Content-Type': 'text/plain'});
			response.write(error + '\n');
			response.end();
		} else {
			response.writeHead(200, {'Content-Type': 'image/jpeg'});
			response.write(file, 'binary');
			response.end();
		}
	});
}

exports.start = start;
exports.upload = upload;
exports.show = show;

